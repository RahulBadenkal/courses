---
import type { BreadcrumbItem } from '../components/Breadcrumb.astro';
import Breadcrumb from '../components/Breadcrumb.astro';
import type { SectionItem } from '../components/SectionNavigator.astro';
import type { Section } from '../components/SectionNavigator.astro';
import SectionNavigator from "../components/SectionNavigator.astro"


export interface Props {
	titlePrefix?: string;
	breadcrumbs: BreadcrumbItem[];
	sections: Section[];
	currentSectionItemId: string;
}

let { titlePrefix, breadcrumbs, sections, currentSectionItemId } = Astro.props;
const currentSectionItem = sections.reduce((item: SectionItem | undefined, section) => item || section.items.find(item => item.id === currentSectionItemId), undefined)!;
breadcrumbs = currentSectionItem ? [...breadcrumbs, {url: currentSectionItem.url, name: currentSectionItem.name}] : breadcrumbs
const title = currentSectionItem?.name
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{[title].concat(titlePrefix ? [titlePrefix]: []).join(' - ')}</title>
	</head>
	<body class="py-12 mx-24">
		<div class="mb-4">
			<Breadcrumb breadcrumbs={breadcrumbs}></Breadcrumb>
		</div>
		<div class="flex gap-x-8">
			<div style="min-width: 250px; width: 25%; max-width: 350px;">
				<SectionNavigator sections={sections} currentSectionItemId={currentSectionItem.id}></SectionNavigator>
			</div>	
			<div class="grow">
				<slot />
			</div>
		</div>
		
	</body>
</html>

<style is:global>
    html, body {
    margin: 0;
    height: 100%;
}
</style>
